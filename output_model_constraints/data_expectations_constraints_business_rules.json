{
  "DataExpectations": [
    {
      "FieldName": "Users.User_ID",
      "Expectation": "Must be a unique string identifier for each user, non-null, serving as primary key"
    },
    {
      "FieldName": "Users.Plan_Type",
      "Expectation": "Must be one of predefined values: Free, Basic, Pro, Enterprise. Non-null string value"
    },
    {
      "FieldName": "Users.Email",
      "Expectation": "Must follow valid email format, be unique across all users, non-null. Sensitive data requiring masking for non-authorized users"
    },
    {
      "FieldName": "Users.User_Name",
      "Expectation": "Non-null string representing user's display name. Sensitive data requiring masking for non-authorized users"
    },
    {
      "FieldName": "Users.Company",
      "Expectation": "Optional string field for company or organization name, can be null"
    },
    {
      "FieldName": "Meetings.Meeting_ID",
      "Expectation": "Must be a unique string identifier for each meeting, non-null, serving as primary key"
    },
    {
      "FieldName": "Meetings.Host_ID",
      "Expectation": "Must be a valid User_ID referencing existing user, non-null foreign key"
    },
    {
      "FieldName": "Meetings.Duration_Minutes",
      "Expectation": "Must be a non-negative integer representing meeting duration in minutes, non-null"
    },
    {
      "FieldName": "Meetings.Start_Time",
      "Expectation": "Must be a valid timestamp indicating meeting start time, non-null"
    },
    {
      "FieldName": "Meetings.End_Time",
      "Expectation": "Must be a valid timestamp indicating meeting end time, non-null, must be after Start_Time"
    },
    {
      "FieldName": "Attendees.Meeting_ID",
      "Expectation": "Must be a valid Meeting_ID referencing existing meeting, part of composite primary key, non-null"
    },
    {
      "FieldName": "Attendees.User_ID",
      "Expectation": "Must be a valid User_ID referencing existing user, part of composite primary key, non-null"
    },
    {
      "FieldName": "Features_Usage.Meeting_ID",
      "Expectation": "Must be a valid Meeting_ID referencing existing meeting, part of composite primary key, non-null"
    },
    {
      "FieldName": "Features_Usage.Feature_Name",
      "Expectation": "Must be from predefined list of available features (e.g., Screen Share, Recording, Chat), part of composite primary key, non-null"
    },
    {
      "FieldName": "Features_Usage.Usage_Count",
      "Expectation": "Must be a positive integer representing frequency of feature use within a single meeting, non-null"
    },
    {
      "FieldName": "Support_Tickets.Ticket_ID",
      "Expectation": "Must be a unique string identifier for each support ticket, non-null, serving as primary key"
    },
    {
      "FieldName": "Support_Tickets.User_ID",
      "Expectation": "Must be a valid User_ID referencing existing user, non-null foreign key"
    },
    {
      "FieldName": "Support_Tickets.Ticket_Type",
      "Expectation": "Must be from predefined list of ticket types (e.g., Audio Issues, Connectivity Problems, Billing), non-null"
    },
    {
      "FieldName": "Support_Tickets.Resolution_Status",
      "Expectation": "Must be from predefined status values: Open, In Progress, Resolved, Closed, non-null"
    },
    {
      "FieldName": "Support_Tickets.Open_Date",
      "Expectation": "Must be a valid date when the ticket was created, non-null"
    },
    {
      "FieldName": "Billing_Events.User_ID",
      "Expectation": "Must be a valid User_ID referencing existing user, part of composite primary key, non-null"
    },
    {
      "FieldName": "Billing_Events.Event_Type",
      "Expectation": "Must be from predefined event types: Subscription, Upgrade, Downgrade, Refund, part of composite primary key, non-null"
    },
    {
      "FieldName": "Billing_Events.Amount",
      "Expectation": "Must be a positive decimal number for revenue events, may be negative for refunds, non-null, follow currency precision rules"
    },
    {
      "FieldName": "Billing_Events.Event_Date",
      "Expectation": "Must be a valid date when the billing event occurred, non-null"
    },
    {
      "FieldName": "Licenses.License_ID",
      "Expectation": "Must be a unique string identifier for each license, non-null, serving as primary key"
    },
    {
      "FieldName": "Licenses.License_Type",
      "Expectation": "Must be from predefined license types: Basic, Pro, Enterprise, non-null"
    },
    {
      "FieldName": "Licenses.Assigned_To_User_ID",
      "Expectation": "Must be a valid User_ID when assigned, can be null for unassigned licenses representing available capacity"
    },
    {
      "FieldName": "Licenses.Start_Date",
      "Expectation": "Must be a valid date indicating license validity start, non-null"
    },
    {
      "FieldName": "Licenses.End_Date",
      "Expectation": "Must be a valid date indicating license expiration, non-null, must be after Start_Date"
    }
  ],
  "Constraints": [
    {
      "ConstraintType": "Primary Key",
      "FieldName": "Users.User_ID",
      "Description": "Unique identifier constraint ensuring each user has a distinct ID"
    },
    {
      "ConstraintType": "Unique",
      "FieldName": "Users.Email",
      "Description": "Email addresses must be unique across all users to prevent duplicate accounts"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Users.Plan_Type",
      "Description": "Must be from predefined list: Free, Basic, Pro, Enterprise"
    },
    {
      "ConstraintType": "Primary Key",
      "FieldName": "Meetings.Meeting_ID",
      "Description": "Unique identifier constraint ensuring each meeting has a distinct ID"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Meetings.Host_ID",
      "Description": "References Users.User_ID to ensure meeting host exists in Users table"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Meetings.Duration_Minutes",
      "Description": "Must be non-negative integer (>= 0)"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Meetings.End_Time",
      "Description": "Must be greater than Start_Time to ensure valid meeting duration"
    },
    {
      "ConstraintType": "Composite Primary Key",
      "FieldName": "Attendees.Meeting_ID, Attendees.User_ID",
      "Description": "Ensures unique user-meeting combinations, preventing duplicate attendance records"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Attendees.Meeting_ID",
      "Description": "References Meetings.Meeting_ID to ensure meeting exists"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Attendees.User_ID",
      "Description": "References Users.User_ID to ensure attendee exists in Users table"
    },
    {
      "ConstraintType": "Composite Primary Key",
      "FieldName": "Features_Usage.Meeting_ID, Features_Usage.Feature_Name",
      "Description": "Ensures unique feature usage records per meeting"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Features_Usage.Meeting_ID",
      "Description": "References Meetings.Meeting_ID to ensure meeting exists"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Features_Usage.Usage_Count",
      "Description": "Must be positive integer (> 0)"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Features_Usage.Feature_Name",
      "Description": "Must be from predefined list of available features in system feature catalog"
    },
    {
      "ConstraintType": "Primary Key",
      "FieldName": "Support_Tickets.Ticket_ID",
      "Description": "Unique identifier constraint ensuring each support ticket has a distinct ID"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Support_Tickets.User_ID",
      "Description": "References Users.User_ID to ensure ticket creator exists in Users table"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Support_Tickets.Ticket_Type",
      "Description": "Must be from predefined list of ticket types (Audio Issues, Connectivity Problems, Billing, etc.)"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Support_Tickets.Resolution_Status",
      "Description": "Must be from predefined status values: Open, In Progress, Resolved, Closed"
    },
    {
      "ConstraintType": "Composite Primary Key",
      "FieldName": "Billing_Events.User_ID, Billing_Events.Event_Type",
      "Description": "Ensures unique billing event records per user and event type combination"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Billing_Events.User_ID",
      "Description": "References Users.User_ID to ensure billing event is associated with existing user"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Billing_Events.Amount",
      "Description": "Must be positive number for revenue events, may be negative for refunds"
    },
    {
      "ConstraintType": "Primary Key",
      "FieldName": "Licenses.License_ID",
      "Description": "Unique identifier constraint ensuring each license has a distinct ID"
    },
    {
      "ConstraintType": "Foreign Key",
      "FieldName": "Licenses.Assigned_To_User_ID",
      "Description": "References Users.User_ID when assigned, nullable for unassigned licenses"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Licenses.End_Date",
      "Description": "Must be greater than Start_Date to ensure valid license period"
    },
    {
      "ConstraintType": "Check",
      "FieldName": "Licenses.License_Type",
      "Description": "Must be from predefined license types: Basic, Pro, Enterprise"
    }
  ],
  "BusinessRules": [
    {
      "RuleName": "User Email Uniqueness",
      "Description": "Email must be unique across all users to prevent duplicate accounts and ensure proper user identification"
    },
    {
      "RuleName": "Plan Type Access Control",
      "Description": "Plan_Type determines access control and feature availability for users across the platform"
    },
    {
      "RuleName": "Meeting Duration Consistency",
      "Description": "Duration_Minutes should align with calculated time difference between Start_Time and End_Time for data integrity"
    },
    {
      "RuleName": "Meeting Time Validation",
      "Description": "End_Time must be greater than Start_Time to ensure logical meeting duration"
    },
    {
      "RuleName": "Host Attendance Inclusion",
      "Description": "Meeting host is automatically considered an attendee and must be included in Attendees table"
    },
    {
      "RuleName": "Unique User-Meeting Attendance",
      "Description": "Composite primary key ensures unique user-meeting combinations, preventing duplicate attendance records"
    },
    {
      "RuleName": "Feature Catalog Validation",
      "Description": "Feature_Name must exist in system feature catalog to ensure only valid features are tracked"
    },
    {
      "RuleName": "Feature Usage Frequency",
      "Description": "Usage_Count represents frequency of use within a single meeting, must be positive integer"
    },
    {
      "RuleName": "Support Ticket Lifecycle",
      "Description": "Ticket lifecycle follows defined progression: Open -> In Progress -> Resolved -> Closed"
    },
    {
      "RuleName": "Resolution Time Calculation",
      "Description": "Resolution time calculated from Open_Date to status change timestamp for performance metrics"
    },
    {
      "RuleName": "Revenue Event Amount Rules",
      "Description": "Amount must be positive for revenue events (Subscription, Upgrade), may be negative for refunds"
    },
    {
      "RuleName": "Revenue Recognition by Event Type",
      "Description": "Event_Type determines revenue recognition rules and financial reporting classification"
    },
    {
      "RuleName": "License Period Validation",
      "Description": "End_Date must be greater than Start_Date to ensure valid license validity period"
    },
    {
      "RuleName": "License-Plan Type Alignment",
      "Description": "License_Type must align with User's Plan_Type when assigned to ensure consistent access rights"
    },
    {
      "RuleName": "Unassigned License Capacity",
      "Description": "Unassigned licenses (Assigned_To_User_ID = null) represent available capacity for license management"
    },
    {
      "RuleName": "Referential Integrity Maintenance",
      "Description": "All foreign key relationships must be maintained with proper cascade delete rules for data cleanup"
    },
    {
      "RuleName": "Orphaned Record Prevention",
      "Description": "Orphaned records should be prevented through proper constraints and referential integrity enforcement"
    },
    {
      "RuleName": "Data Privacy and Masking",
      "Description": "Email and User_Name must be masked for non-authorized users to comply with data privacy requirements"
    },
    {
      "RuleName": "Role-Based Data Access",
      "Description": "Data access must be filtered based on user roles and permissions as defined in access control requirements"
    },
    {
      "RuleName": "Currency Precision Compliance",
      "Description": "Billing event amounts must follow currency precision rules for accurate financial calculations"
    },
    {
      "RuleName": "Meeting Host Uniqueness",
      "Description": "Every meeting must have exactly one host, ensuring clear ownership and responsibility"
    },
    {
      "RuleName": "License History Tracking",
      "Description": "System supports license history and concurrent license assignments for comprehensive license management"
    },
    {
      "RuleName": "Feature Usage Per Meeting",
      "Description": "Each feature used in a meeting creates a separate record for detailed usage analytics"
    },
    {
      "RuleName": "Support Interaction Tracking",
      "Description": "System tracks all support interactions per user for comprehensive customer service analytics"
    },
    {
      "RuleName": "Complete Billing History",
      "Description": "System tracks complete billing history per user for financial analysis and customer lifecycle management"
    }
  ]
}