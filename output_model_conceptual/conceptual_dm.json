{
  "metadata": {
    "model_name": "Zoom Platform Analytics System - Conceptual Data Model",
    "version": "1.0",
    "created_date": "2024-12-19",
    "author": "Senior Data Model Analyst",
    "description": "Conceptual data model for Zoom Platform Analytics System supporting Platform Usage, Service Reliability, and Revenue/License Analysis reports",
    "last_updated": "2024-12-19T12:00:00Z",
    "business_domain": "Video Communications Analytics"
  },
  "entities": {
    "Users": {
      "description": "Core entity representing all platform users",
      "entity_type": "Master Data",
      "attributes": {
        "User_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each user",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "User_Name": {
          "data_type": "VARCHAR(255)",
          "is_nullable": false,
          "description": "Full name of the user",
          "security_classification": "PII - Requires anonymization for non-authorized users",
          "constraints": ["NOT NULL"]
        },
        "Email": {
          "data_type": "VARCHAR(255)",
          "is_nullable": false,
          "description": "User email address",
          "security_classification": "PII - Requires anonymization for non-authorized users",
          "constraints": ["NOT NULL", "VALID_EMAIL_FORMAT"]
        },
        "Plan_Type": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "description": "User subscription plan type",
          "constraints": ["NOT NULL", "CHECK (Plan_Type IN ('Free', 'Basic', 'Pro', 'Business', 'Enterprise'))"]
        },
        "Company": {
          "data_type": "VARCHAR(255)",
          "is_nullable": true,
          "description": "Company or organization name"
        },
        "Registration_Date": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "Date when user registered",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "Status": {
          "data_type": "VARCHAR(20)",
          "is_nullable": false,
          "description": "User account status",
          "constraints": ["NOT NULL", "CHECK (Status IN ('Active', 'Inactive', 'Suspended', 'Deleted'))"]
        }
      },
      "business_rules": [
        "User_ID must be unique across the system",
        "Email must be unique and follow valid email format",
        "Plan_Type determines access control permissions",
        "Registration_Date cannot be in the future"
      ]
    },
    "Meetings": {
      "description": "Entity representing all meetings conducted on the platform",
      "entity_type": "Transactional Data",
      "attributes": {
        "Meeting_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each meeting",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "Host_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User ID of the meeting host",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "Meeting_Title": {
          "data_type": "VARCHAR(500)",
          "is_nullable": true,
          "description": "Title or name of the meeting"
        },
        "Start_Time": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "Meeting start timestamp",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "End_Time": {
          "data_type": "TIMESTAMP",
          "is_nullable": true,
          "description": "Meeting end timestamp",
          "constraints": ["VALID_TIMESTAMP", "CHECK (End_Time > Start_Time)"]
        },
        "Duration_Minutes": {
          "data_type": "INTEGER",
          "is_nullable": false,
          "description": "Meeting duration in minutes",
          "constraints": ["NOT NULL", "CHECK (Duration_Minutes >= 0)"]
        },
        "Meeting_Type": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "description": "Type of meeting",
          "constraints": ["NOT NULL", "CHECK (Meeting_Type IN ('Scheduled', 'Instant', 'Recurring', 'Webinar'))"]
        },
        "Max_Participants": {
          "data_type": "INTEGER",
          "is_nullable": true,
          "description": "Maximum number of participants allowed",
          "constraints": ["CHECK (Max_Participants > 0)"]
        }
      },
      "business_rules": [
        "Duration_Minutes must be non-negative integer",
        "Start_Time and End_Time must be valid timestamps",
        "End_Time must be after Start_Time if provided",
        "Host_ID must exist in Users table"
      ]
    },
    "Attendees": {
      "description": "Entity representing meeting participants",
      "entity_type": "Transactional Data",
      "attributes": {
        "Attendee_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each attendee record",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "Meeting_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Meetings.Meeting_ID",
          "description": "Meeting identifier",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Meetings(Meeting_ID)"]
        },
        "User_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": true,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User ID if attendee is registered user",
          "constraints": ["FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "Attendee_Name": {
          "data_type": "VARCHAR(255)",
          "is_nullable": false,
          "description": "Name of the attendee",
          "security_classification": "PII - Requires anonymization for non-authorized users",
          "constraints": ["NOT NULL"]
        },
        "Join_Time": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "Time when attendee joined the meeting",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "Leave_Time": {
          "data_type": "TIMESTAMP",
          "is_nullable": true,
          "description": "Time when attendee left the meeting",
          "constraints": ["VALID_TIMESTAMP", "CHECK (Leave_Time > Join_Time)"]
        },
        "Attendance_Duration_Minutes": {
          "data_type": "INTEGER",
          "is_nullable": false,
          "description": "Duration of attendance in minutes",
          "constraints": ["NOT NULL", "CHECK (Attendance_Duration_Minutes >= 0)"]
        }
      },
      "business_rules": [
        "Meeting_ID must exist in Meetings table",
        "Leave_Time must be after Join_Time if provided",
        "Attendance_Duration_Minutes must be non-negative",
        "User_ID must exist in Users table if provided"
      ]
    },
    "Features_Usage": {
      "description": "Entity tracking usage of platform features during meetings",
      "entity_type": "Transactional Data",
      "attributes": {
        "Usage_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each feature usage record",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "Meeting_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Meetings.Meeting_ID",
          "description": "Meeting where feature was used",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Meetings(Meeting_ID)"]
        },
        "User_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User who used the feature",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "Feature_Name": {
          "data_type": "VARCHAR(100)",
          "is_nullable": false,
          "description": "Name of the feature used",
          "constraints": ["NOT NULL", "CHECK (Feature_Name IN ('Screen_Share', 'Chat', 'Recording', 'Breakout_Rooms', 'Whiteboard', 'Polls', 'Reactions', 'Virtual_Background'))"]
        },
        "Usage_Count": {
          "data_type": "INTEGER",
          "is_nullable": false,
          "description": "Number of times feature was used",
          "constraints": ["NOT NULL", "CHECK (Usage_Count > 0)"]
        },
        "Usage_Timestamp": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "When the feature was used",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "Usage_Duration_Minutes": {
          "data_type": "INTEGER",
          "is_nullable": true,
          "description": "Duration of feature usage in minutes",
          "constraints": ["CHECK (Usage_Duration_Minutes >= 0)"]
        }
      },
      "business_rules": [
        "Meeting_ID must exist in Meetings table",
        "User_ID must exist in Users table",
        "Usage_Count must be positive integer",
        "Feature_Name must be from predefined list"
      ]
    },
    "Support_Tickets": {
      "description": "Entity representing customer support tickets",
      "entity_type": "Transactional Data",
      "attributes": {
        "Ticket_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each support ticket",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "User_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User who created the ticket",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "Ticket_Type": {
          "data_type": "VARCHAR(100)",
          "is_nullable": false,
          "description": "Category of the support ticket",
          "constraints": ["NOT NULL", "CHECK (Ticket_Type IN ('Audio_Issues', 'Video_Issues', 'Connectivity_Problems', 'Login_Issues', 'Billing_Questions', 'Feature_Request', 'Bug_Report', 'Account_Management', 'Technical_Support'))"]
        },
        "Resolution_Status": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "description": "Current status of the ticket",
          "constraints": ["NOT NULL", "CHECK (Resolution_Status IN ('Open', 'In_Progress', 'Pending_Customer', 'Resolved', 'Closed', 'Escalated'))"]
        },
        "Priority": {
          "data_type": "VARCHAR(20)",
          "is_nullable": false,
          "description": "Priority level of the ticket",
          "constraints": ["NOT NULL", "CHECK (Priority IN ('Low', 'Medium', 'High', 'Critical'))"]
        },
        "Open_Date": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "Date and time when ticket was opened",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "Close_Date": {
          "data_type": "TIMESTAMP",
          "is_nullable": true,
          "description": "Date and time when ticket was closed",
          "constraints": ["VALID_TIMESTAMP", "CHECK (Close_Date > Open_Date)"]
        },
        "Subject": {
          "data_type": "VARCHAR(500)",
          "is_nullable": false,
          "description": "Brief description of the issue",
          "constraints": ["NOT NULL"]
        },
        "Description": {
          "data_type": "TEXT",
          "is_nullable": true,
          "description": "Detailed description of the issue"
        }
      },
      "business_rules": [
        "User_ID must exist in Users table",
        "Ticket_Type and Resolution_Status must be from predefined lists",
        "Open_Date must be valid date",
        "Close_Date must be after Open_Date if provided"
      ]
    },
    "Billing_Events": {
      "description": "Entity representing billing transactions and events",
      "entity_type": "Transactional Data",
      "attributes": {
        "Event_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each billing event",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "User_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User associated with the billing event",
          "constraints": ["NOT NULL", "FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "Event_Type": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "description": "Type of billing event",
          "constraints": ["NOT NULL", "CHECK (Event_Type IN ('Subscription', 'Upgrade', 'Downgrade', 'Renewal', 'Cancellation', 'Refund', 'Payment', 'Invoice'))"]
        },
        "Amount": {
          "data_type": "DECIMAL(10,2)",
          "is_nullable": false,
          "description": "Monetary amount of the billing event",
          "constraints": ["NOT NULL", "CHECK (Amount > 0)"]
        },
        "Currency": {
          "data_type": "VARCHAR(3)",
          "is_nullable": false,
          "description": "Currency code (ISO 4217)",
          "constraints": ["NOT NULL", "CHECK (LENGTH(Currency) = 3)"]
        },
        "Event_Date": {
          "data_type": "TIMESTAMP",
          "is_nullable": false,
          "description": "Date and time of the billing event",
          "constraints": ["NOT NULL", "VALID_TIMESTAMP"]
        },
        "Payment_Method": {
          "data_type": "VARCHAR(50)",
          "is_nullable": true,
          "description": "Payment method used",
          "constraints": ["CHECK (Payment_Method IN ('Credit_Card', 'PayPal', 'Bank_Transfer', 'Invoice', 'Other'))"]
        },
        "Transaction_ID": {
          "data_type": "VARCHAR(100)",
          "is_nullable": true,
          "description": "External transaction identifier"
        }
      },
      "business_rules": [
        "User_ID must exist in Users table",
        "Amount must be positive number",
        "Event_Type must be from predefined values",
        "Currency must be valid ISO 4217 code"
      ]
    },
    "Licenses": {
      "description": "Entity representing software licenses assigned to users",
      "entity_type": "Master Data",
      "attributes": {
        "License_ID": {
          "data_type": "VARCHAR(50)",
          "is_primary_key": true,
          "is_nullable": false,
          "description": "Unique identifier for each license",
          "constraints": ["UNIQUE", "NOT NULL"]
        },
        "Assigned_To_User_ID": {
          "data_type": "VARCHAR(50)",
          "is_nullable": true,
          "is_foreign_key": true,
          "references": "Users.User_ID",
          "description": "User to whom license is assigned",
          "constraints": ["FOREIGN KEY REFERENCES Users(User_ID)"]
        },
        "License_Type": {
          "data_type": "VARCHAR(50)",
          "is_nullable": false,
          "description": "Type of license",
          "constraints": ["NOT NULL", "CHECK (License_Type IN ('Basic', 'Pro', 'Business', 'Enterprise', 'Developer', 'Educational'))"]
        },
        "Start_Date": {
          "data_type": "DATE",
          "is_nullable": false,
          "description": "License validity start date",
          "constraints": ["NOT NULL", "VALID_DATE"]
        },
        "End_Date": {
          "data_type": "DATE",
          "is_nullable": false,
          "description": "License validity end date",
          "constraints": ["NOT NULL", "VALID_DATE", "CHECK (End_Date > Start_Date)"]
        },
        "Status": {
          "data_type": "VARCHAR(20)",
          "is_nullable": false,
          "description": "Current status of the license",
          "constraints": ["NOT NULL", "CHECK (Status IN ('Active', 'Expired', 'Suspended', 'Revoked'))"]
        },
        "Max_Participants": {
          "data_type": "INTEGER",
          "is_nullable": true,
          "description": "Maximum participants allowed under this license",
          "constraints": ["CHECK (Max_Participants > 0)"]
        },
        "Features_Included": {
          "data_type": "TEXT",
          "is_nullable": true,
          "description": "JSON array of features included in the license"
        }
      },
      "business_rules": [
        "License_Type must be from predefined values",
        "Start_Date must be before End_Date",
        "Assigned_To_User_ID must exist in Users table if provided",
        "Active licenses cannot have End_Date in the past"
      ]
    }
  },
  "relationships": {
    "Users_to_Meetings": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Meetings",
      "foreign_key": "Host_ID",
      "description": "A user can host multiple meetings",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Meetings_to_Attendees": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Meetings",
      "child_entity": "Attendees",
      "foreign_key": "Meeting_ID",
      "description": "A meeting can have multiple attendees",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Users_to_Attendees": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Attendees",
      "foreign_key": "User_ID",
      "description": "A user can attend multiple meetings",
      "cardinality": "1:N",
      "referential_integrity": "SET NULL ON DELETE"
    },
    "Meetings_to_Features_Usage": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Meetings",
      "child_entity": "Features_Usage",
      "foreign_key": "Meeting_ID",
      "description": "Features can be used multiple times in a meeting",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Users_to_Features_Usage": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Features_Usage",
      "foreign_key": "User_ID",
      "description": "A user can use multiple features across meetings",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Users_to_Support_Tickets": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Support_Tickets",
      "foreign_key": "User_ID",
      "description": "A user can create multiple support tickets",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Users_to_Billing_Events": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Billing_Events",
      "foreign_key": "User_ID",
      "description": "A user can have multiple billing events",
      "cardinality": "1:N",
      "referential_integrity": "CASCADE ON DELETE"
    },
    "Users_to_Licenses": {
      "relationship_type": "One-to-Many",
      "parent_entity": "Users",
      "child_entity": "Licenses",
      "foreign_key": "Assigned_To_User_ID",
      "description": "A user can be assigned multiple licenses",
      "cardinality": "1:N",
      "referential_integrity": "SET NULL ON DELETE"
    }
  },
  "constraints": [
    "Duration_Minutes must be non-negative integer",
    "Start_Time and End_Time must be valid timestamps",
    "End_Time must be after Start_Time if provided",
    "Amount must be positive number",
    "Email must be unique across all users",
    "Ticket_Type and Resolution_Status must be from predefined lists",
    "License_Type must be from predefined values",
    "Start_Date must be before End_Date for licenses",
    "Close_Date must be after Open_Date for tickets",
    "All foreign key relationships must be maintained"
  ]
}